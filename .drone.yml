kind: pipeline
type: docker
name: root

steps:
  - name: check-sdk-abi
    image: node:18.19
    commands:
      - cd packages/sdk
      - npm ci
      - npm run refresh-abis
      - |
        if [ -n "$(git diff --name-only)" ]; then
          echo "ABIs not up-to-date in packages/sdk, need to run 'npm run refresh-abis'"
          exit 1
        fi

  - name: check-subgraph-abi
    image: node:18.19
    commands:
      - cd packages/subgraph
      - npm ci
      - npm run refresh-abis
      - |
        if [ -n "$(git diff --name-only)" ]; then
          echo "ABIs not up-to-date in packages/subgraph, need to run 'npm run refresh-abis'"
          exit 1
        fi

  - name: cat drone consider
    image: bash
    commands:
      - cat .drone-consider
    depends_on:
      - check-sdk-abi
      - check-subgraph-abi

---
kind: pipeline
type: docker
name: deploy-subgraph-dev

trigger:
  event:
    - promote
  target:
    - subgraph-dev
    - subgraph-production
  branch:
    - develop
    - v2
    - main

steps:
  - name: only subgraph package
    image: bash
    commands:
      - cp -r packages/subgraph/. . && rm -rf packages

  - name: deploy-v2-dev
    image: node:18.19
    params:
      - START_BLOCK
    environment:
      GRAPHNODE_URL:
        from_secret: graphnode-url
      IPFS_URL:
        from_secret: ipfs-url
    commands:
      - export SUBGRAPH_NAME=bellecour/dev-dataprotector-v2
      - echo "deploying commit $DRONE_COMMIT on subgraph $SUBGRAPH_NAME"
      - npm ci
      - npm run codegen
      - npm run build
      - npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
      - npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $DRONE_COMMIT
    when:
      target:
        - subgraph-dev
      branch:
        - v2

  - name: deploy-dev
    image: node:18.19
    params:
      - START_BLOCK
    environment:
      GRAPHNODE_URL:
        from_secret: graphnode-url
      IPFS_URL:
        from_secret: ipfs-url
    commands:
      - export SUBGRAPH_NAME=bellecour/dev-dataprotector
      - echo "deploying commit $DRONE_COMMIT on subgraph $SUBGRAPH_NAME"
      - npm ci
      - npm run codegen
      - npm run build
      - npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
      - npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $DRONE_COMMIT
    when:
      target:
        - subgraph-dev
      branch:
        - develop

  - name: deploy-prod
    image: node:18.19
    params:
      - START_BLOCK
    environment:
      GRAPHNODE_URL:
        from_secret: graphnode-url
      IPFS_URL:
        from_secret: ipfs-url
    commands:
      - export SUBGRAPH_NAME=bellecour/dataprotector
      - echo "deploying commit $DRONE_COMMIT on subgraph $SUBGRAPH_NAME"
      - npm ci
      - npm run codegen
      - npm run build
      - npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
      - npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $(npm pkg get version)
    when:
      target:
        - subgraph-production
      branch:
        - main

---
kind: pipeline
type: docker
name: dataprotector-deserializer publish npm

trigger:
  event:
    - promote
  target:
    - dataprotector-deserializer-nightly
    - dataprotector-deserializer-latest
  branch:
    - v2
    - main

steps:
  - name: build test dependency dataprotector-sdk
    image: node:18
    pull: always
    commands:
      - cd packages/sdk
      - npm ci
      - npm run codegen
      - npm run build

  - name: install
    image: node:18
    pull: always
    commands:
      - cd packages/dataprotector-deserializer
      - node -v
      - npm -v
      - npm ci
      - npm run test:prepare

  - name: format
    image: node:18
    commands:
      - cd packages/dataprotector-deserializer
      - npm run check-format

  - name: lint
    image: node:18
    commands:
      - cd packages/dataprotector-deserializer
      - npm run lint

  - name: check-types
    image: node:18
    commands:
      - cd packages/dataprotector-deserializer
      - npm run check-types

  - name: test
    image: node:18
    commands:
      - cd packages/dataprotector-deserializer
      - npm run test

  - name: build
    image: node:18
    commands:
      - cd packages/dataprotector-deserializer
      - npm run build

  - name: set version
    image: node:18.19
    commands:
      - cd packages/dataprotector-deserializer
      - eval npm pkg set version="$(npm pkg get version)-nightly-$DRONE_COMMIT"
    when:
      branch:
        - v2
      target:
        - dataprotector-deserializer-nightly

  - name: npm publish nightly
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token_dataprotector_deserializer
      tag: nightly
      access: public
      folder: packages/dataprotector-deserializer
    when:
      branch:
        - v2
      target:
        - dataprotector-deserializer-nightly

  - name: npm publish latest
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token_dataprotector_deserializer
      tag: latest
      access: public
      folder: packages/dataprotector-deserializer
    when:
      branch:
        - main
      target:
        - dataprotector-deserializer-latest
