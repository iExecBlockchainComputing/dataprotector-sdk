kind: pipeline
type: docker
name: root checks

trigger:
  event:
    - pull_request

steps:
  - name: cat-drone-consider
    image: node:18.19
    commands:
      - cat .drone-consider

  - name: check-sdk-abi
    image: node:18.19
    commands:
      - cd packages/sdk
      - npm run refresh-abis
      - |
        if [ -n "$(git diff --name-only)" ]; then
          echo "ABIs not up-to-date in packages/sdk, need to run 'npm run refresh-abis'"
          exit 1
        fi

  - name: check-subgraph-abi
    image: node:18.19
    commands:
      - cd packages/subgraph
      - npm run refresh-abis
      - |
        if [ -n "$(git diff --name-only)" ]; then
          echo "ABIs not up-to-date in packages/subgraph, need to run 'npm run refresh-abis'"
          exit 1
        fi

---
# pipeline to upgrade the DataProtectorSharing SC
kind: pipeline
type: docker
name: sharing-smart-contract upgrade

trigger:
  event:
    - promote
  target:
    # upgrade the staging DataProtectorSharing contract with the new implementation
    - sharing-smart-contract-upgrade-staging
    # # upgrade the prod DataProtectorSharing contract with the new implementation
    # - sharing-smart-contract-upgrade-prod
  branch:
    - main

steps:
  - name: install-deps
    image: node:18.19
    pull: always
    commands:
      - cd packages/sharing-smart-contract
      - npm ci

  - name: install-forge
    image: node:18.19
    pull: always
    commands:
      - export XDG_CONFIG_HOME=/drone/src
      - curl -L https://foundry.paradigm.xyz | bash
      - export PATH="$PATH:/drone/src/.foundry/bin"
      - foundryup
      - forge install foundry-rs/forge-std --no-git

  - name: smart-contract-staging-upgrade
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        # TODO replace by dataprotector-admin-dev-privatekey
        from_secret: deployer-dev-privatekey
      ENV: staging
      MANIFEST_DEFAULT_DIR: .openzeppelin/staging
    commands:
      - cd packages/sharing-smart-contract
      - export PATH="$PATH:/drone/src/.foundry/bin"
      - npm run upgrade -- --network bellecour
      - git add .openzeppelin
      - git commit -m "$DRONE_DEPLOY_TO deployment $DRONE_BUILD_NUMBER $DRONE_COMMIT" --author="drone-product <team-product@iex.ec>"
    depends_on:
      - install-forge
      - install-deps
    when:
      target:
        - sharing-smart-contract-upgrade-staging

  # - name: smart-contract-prod-upgrade
  #   image: node:18.19
  #   environment:
  #     WALLET_PRIVATE_KEY:
  #       # TODO replace by dataprotector-admin-prod-privatekey
  #       from_secret: deployer-prod-privatekey
  #     ENV: prod
  #     MANIFEST_DEFAULT_DIR: .openzeppelin/prod
  #   commands:
  #     - cd packages/sharing-smart-contract
  #     - export PATH="$PATH:/drone/src/.foundry/bin"
  #     - npm run upgrade -- --network bellecour
  #     - git add .openzeppelin
  #     - git commit -m "$DRONE_DEPLOY_TO deployment $DRONE_BUILD_NUMBER $DRONE_COMMIT" --author="drone-product <team-product@iex.ec>"
  #   depends_on:
  #     - install-forge
  #     - install-deps
  #   when:
  #     target:
  #       - sharing-smart-contract-upgrade-prod

  - name: git-push
    image: appleboy/drone-git-push
    settings:
      remote: ssh://git@github.com/iExecBlockchainComputing/dataprotector-sdk.git
      branch: update-env-${DRONE_BUILD_NUMBER}
      ssh_key:
        from_secret: ssh-key-team-product-github-push
    depends_on:
      - smart-contract-staging-upgrade
      # - smart-contract-prod-upgrade

---
---
kind: pipeline
type: docker
name: sdk undeprecate npm version

trigger:
  event:
    - promote
  target:
    # remove the deprecation of a version of @iexec/dataprotector
    - sdk-undeprecate-package

steps:
  - name: authenticate
    image: robertstettner/drone-npm-auth
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token

  - name: undeprecate package
    image: node:18.19
    params:
      - PACKAGE_VERSION
    commands:
      - if [ -n "$PACKAGE_VERSION" ]; then npm deprecate @iexec/dataprotector@$PACKAGE_VERSION ""; else echo "PACKAGE_VERSION is not set"; fi
