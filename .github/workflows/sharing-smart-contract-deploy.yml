name: Sharing Smart Contract - Deployment

on:
  workflow_dispatch: # Manual trigger
    inputs:
      network:
        description: 'Network'
        required: true
        type: choice
        options:
          - hardhat
          - avalancheFujiTestnet
          - arbitrumSepolia
          - bellecour
        default: 'hardhat'
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - testnets
          - mainnets
        default: 'testnets'

jobs:

  # Validate deployment network and environment.
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # On Github, the environment `mainnets` is restricted to
      # the main branch. Here we check that it's only used with
      # mainnet networks.
      - name: Validate mainnet deployment
        run: |
          if [[ "${{ inputs.environment }}" == "mainnets" && "${{ inputs.network }}" != "bellecour" ]]; then
              echo "::error::mainnets environment can only be used with mainnet networks."
              exit 1
          fi
          echo "Deploying to network '${{ inputs.network }}' with environment '${{ inputs.environment }}'."

  # Build and test before deploying.
  ci:
    needs: validate
    uses: ./.github/workflows/sharing-smart-contracts-reusable.yml
    with:
      node-version: 18

  # Run deployment steps.
  deploy:
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for saving deployment
    environment: ${{ inputs.environment }}
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> $GITHUB_ENV

          if [ "${{ inputs.network }}" == "arbitrumSepolia" ]; then
            echo "ARBISCAN_API_KEY=${{ secrets.ARBISCAN_API_KEY }}" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: packages/sharing-smart-contract
        run: npm ci

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
          cache: true

      - name: Deploy contracts
        working-directory: packages/sharing-smart-contract
        run: npm run deploy -- --network ${{ inputs.network }}

      - name: Save deployment artifacts and updated config
        if: inputs.network != 'hardhat'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: save deployment artifacts for ${{ inputs.network }} (${{ inputs.environment }}, ${{ github.run_id }})'
          file_pattern: 'packages/sharing-smart-contract/ignition/deployments/*'
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_author: 'GitHub Actions Bot <github-actions[bot]@users.noreply.github.com>'

  # TODO
  # Verify contracts.
  verify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Verify contracts
        working-directory: packages/sharing-smart-contract
        run: echo "Verify contracts" # npm run verify:ignition -- <deploymentId>
