name: Deploy Subgraph

on:
  workflow_dispatch: # Triggered manually but we can also trigger with an release event
    inputs:
      environment:
        description: 'Deployment environment (must match a GitHub Environment name)'
        required: true
        default: staging
        type: choice
        options:
          - staging
          - tmp
          - prod
      # Add new networks when needed. Do not forget to add necessary data in the networks.json file.
      networkName:
        description: 'Network Name'
        required: false
        default: bellecour
        type: choice
        options:
          - bellecour

jobs:
  deploy:
    runs-on:
      group: Azure_runners
      labels: [ self-hosted, Linux, X64 ]
    # Associate the job with a GitHub Environment which has pre-defined variables and secrets.
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Set Version Label
        id: set_version
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "version=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          else
            version=$(npm pkg get version | sed 's/"//g')
            echo "version=$version" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Subgraph
        env:
          NETWORK_NAME: ${{ github.event.inputs.networkName }}
          VERSION_LABEL: ${{ steps.set_version.outputs.version }}
          GRAPHNODE_URL: ${{ vars.GRAPHNODE_URL }}
          IPFS_URL: ${{ vars.IPFS_URL }}
          DEPLOY_ENV: ${{ vars.ENV_NAME }}
        run: |
          echo "Starting deployment with the following parameters:"
          echo "  Network Name: $NETWORK_NAME"
          echo "  Version Label: $VERSION_LABEL"
          echo "  DEPLOY_ENV: $DEPLOY_ENV"
          echo "  GRAPHNODE_URL: $GRAPHNODE_URL"
          echo "  IPFS_URL: $IPFS_URL"
          npm run all
        shell: bash
