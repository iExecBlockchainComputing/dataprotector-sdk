# ============================== Protected Data ==============================

type SchemaEntry @entity {
  id: String!
  path: String
  type: String
}

type ProtectedData @entity {
  id: Bytes!
  owner: Account!
  name: String!
  jsonSchema: String!
  schema: [SchemaEntry!]!
  collection: Collection
  isIncludedInSubscription: Boolean
  isRentable: Boolean
  isForSale: Boolean
  sales: [Sale!]! @derivedFrom(field: "protectedData")
  rentals: [Rental!]! @derivedFrom(field: "protectedData")
  consumptions: [Consumption!]! @derivedFrom(field: "protectedData")
  rentalParams: RentalParam
  saleParams: SaleParam
  multiaddr: Bytes!
  checksum: Bytes!
  creationTimestamp: BigInt!
  transactionHash: Bytes!
  blockNumber: BigInt!
}

type Account @entity {
  id: ID!
  datasets: [ProtectedData!]! @derivedFrom(field: "owner")
  collections: [Collection!]! @derivedFrom(field: "owner")
  subscriptions: [CollectionSubscription!]! @derivedFrom(field: "subscriber")
  addOnlyAppWhitelists: [AddOnlyAppWhitelist!]! @derivedFrom(field: "owner")
  apps: [App!]! @derivedFrom(field: "owner")
}

type Collection @entity {
  id: ID!
  owner: Account!
  protectedDatas: [ProtectedData!]! @derivedFrom(field: "collection")
  subscriptions: [CollectionSubscription!]! @derivedFrom(field: "collection")
  subscriptionParams: SubscriptionParam
  creationTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type SubscriptionParam @entity {
  id: ID!
  duration: BigInt!
  price: BigInt!
}

# Cannot use 'Subscription' as it is a reserved word
type CollectionSubscription @entity {
  id: ID!
  collection: Collection!
  subscriber: Account!
  endDate: BigInt!
  creationTimestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Rental @entity {
  id: ID!
  renter: Bytes!
  protectedData: ProtectedData!
  creationTimestamp: BigInt!
  endDate: BigInt!
  collection: Collection!
  rentalParams: RentalParam!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type RentalParam @entity {
  id: ID!
  duration: BigInt!
  price: BigInt!
}

type Sale @entity {
  id: ID!
  buyer: Bytes!
  protectedData: ProtectedData!
  creationTimestamp: BigInt!
  collection: Collection!
  saleParams: SaleParam!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type SaleParam @entity {
  id: ID!
  price: BigInt!
}

type Consumption @entity(immutable: true) {
  id: ID!
  dealId: Bytes!
  protectedData: ProtectedData!
  collection: Collection!
  mode: String!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type AddOnlyAppWhitelist @entity {
  id: ID!
  owner: Account!
  apps: [App!]! @derivedFrom(field: "addOnlyAppWhitelists")
}

type App @entity {
  id: ID!
  owner: Account!
  addOnlyAppWhitelists: [AddOnlyAppWhitelist!]!
}
