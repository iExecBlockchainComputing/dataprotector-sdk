---
#pipeline to deploy dapp on iexec
kind: pipeline
type: docker
name: deploy-dapp

trigger:
  event:
    - promote
  target:
    - deploy-dapp-dev

  # branch:
  #   - develop
  #   - v2
  #   - main

steps:
  - name: only dapp package
    image: bash
    commands:
      - cp -r packages/deployment-dapp/. . && rm -rf packages

  - name: get scone fingerprint (dev)
    image: iexechub/content-creator-dapp:dev-2c1faec111fabd9f5c2f99a3bb8d10a8011d805e-sconify-5.7.5-v12-debug
    # image: iexechub/protected-data-delivery-dapp:dev-${DRONE_COMMIT}-sconify-5.7.5-v12-production
    commands:
      - SCONE_HASH=1 node > .scone-fingerprint
    when:
      target:
        - deploy-dapp-dev
      # branch:
      #   - v2
      #   - develop

  - name: install deps
    image: node:18.19
    pull: always
    commands:
      - npm ci

  - name: format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: deploy dapp
    image: node:18.19
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: localdev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: protectedDataSharing-dapp-prod-privatekey
    commands:
      - npm run deploy-app

  - name: configure ENS
    image: node:18.19
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: localdev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: protected-data-delivery-dapp-prod-privatekey
    commands:
      - npm run configure-app-ens

  - name: create app whitelist
    image: node:18.19
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: localdev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: protected-data-delivery-dapp-prod-privatekey
    commands:
      - npm run create-app-whitelist

  - name: add app to whitelist
    image: node:18.19
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: localdev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: protected-data-delivery-dapp-prod-privatekey
    commands:
      - npm run add-app-to-whitelist

  - name: transfer app ownership
    image: node:18.19
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: localdev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: protected-data-delivery-dapp-prod-privatekey
    commands:
      - npm run transfer-app-ownership
