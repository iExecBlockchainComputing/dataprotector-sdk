{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe4f319aDf2f3DbFD3270f35CEc90575dC858A0dA",
      "kind": "transparent"
    },
    {
      "address": "0x2dA2D268281d79b81D609D68e4507e7ACDfd7E05",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a8715b6ebae5c408bf687445be9061c544bc405b8b556bcfce0b94dc04009ebb": {
      "address": "0xd617e6772DE4B66257292FF299227d9D2eB5d7E8",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_implementationAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(AddOnlyAppWhitelist)12039",
            "contract": "AddOnlyAppWhitelistRegistry",
            "src": "contracts/registry/AddOnlyAppWhitelistRegistry.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(AddOnlyAppWhitelist)12039": {
            "label": "contract AddOnlyAppWhitelist",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9c706f3ffc6cf3b2cc787dbcd51e9d00497fc1ef92a03677941a1b29f693bd26": {
      "address": "0xeF79f16Ef1be317edA5Fecd4BF1e758feAA83b83",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_iexecResultStorageProvider",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:40"
          },
          {
            "label": "_iexecResultStorageProxy",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:43"
          },
          {
            "label": "_salt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:44"
          },
          {
            "label": "_nextCollectionTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:46"
          },
          {
            "label": "earning",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:49"
          },
          {
            "label": "protectedDataDetails",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(ProtectedDataDetails)11296_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:51"
          },
          {
            "label": "collectionDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(CollectionDetails)11275_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IAddOnlyAppWhitelist)11099": {
            "label": "contract IAddOnlyAppWhitelist",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(ProtectedDataDetails)11296_storage)": {
            "label": "mapping(address => struct IDataProtectorSharing.ProtectedDataDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint48)": {
            "label": "mapping(address => uint48)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionDetails)11275_storage)": {
            "label": "mapping(uint256 => struct IDataProtectorSharing.CollectionDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionDetails)11275_storage": {
            "label": "struct IDataProtectorSharing.CollectionDetails",
            "members": [
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastSubscriptionExpiration",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscriptionParams",
                "type": "t_struct(SubscriptionParams)11832_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subscribers",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProtectedDataDetails)11296_storage": {
            "label": "struct IDataProtectorSharing.ProtectedDataDetails",
            "members": [
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addOnlyAppWhitelist",
                "type": "t_contract(IAddOnlyAppWhitelist)11099",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRentalExpiration",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "inSubscription",
                "type": "t_bool",
                "offset": 26,
                "slot": "1"
              },
              {
                "label": "rentingParams",
                "type": "t_struct(RentingParams)11667_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "renters",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sellingParams",
                "type": "t_struct(SellingParams)11747_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RentingParams)11667_storage": {
            "label": "struct IRental.RentingParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint40",
                "offset": 9,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellingParams)11747_storage": {
            "label": "struct ISale.SellingParams",
            "members": [
              {
                "label": "isForSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SubscriptionParams)11832_storage": {
            "label": "struct ISubscription.SubscriptionParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint40",
                "offset": 9,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint72": {
            "label": "uint72",
            "numberOfBytes": "9"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
