{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x55C4106502A62E7a2F8cE450C88cE1E4D9F6668f",
      "txHash": "0x447bed3d18571b09da804348b7ac897896de26ac378b65e7f88e10d45813c3cb",
      "kind": "transparent"
    },
    {
      "address": "0x90c7b371Ba89Cad2E9f4Cb0f49b055CF2265abf8",
      "txHash": "0x25144823b544530dcb8ba435e0b79e90980f3d0910d81063b04e2b19c38f0607",
      "kind": "transparent"
    },
    {
      "address": "0xED2e03599f3973Fa4f0571D54bD1aB157D9FB2B7",
      "txHash": "0x2557d3cec34b3c50c133d3c909821d1e740c505122a8764574bdf04b6dd4f253",
      "kind": "transparent"
    },
    {
      "address": "0x47fca2244cE9e8f1675D70F671c5944a7B7A29EA",
      "txHash": "0x758d58b8716653f3f5529b53f90dd82af2d507ea38c9a533c7dbaef3ec1e7c83",
      "kind": "transparent"
    },
    {
      "address": "0x70b21D15A6751523657059BA252C7191794392AF",
      "txHash": "0x388e9d8d81feee1837fe3503674140088bb275644aac3cc738123f17aac60ef2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9684af641df93f4f8801aea7f2aa345655eeb17aa6a1ee0659f7e123ec50c76c": {
      "address": "0xce82fC485f58E569200e78482d6AB68D47011547",
      "txHash": "0x4e233dfeeb88eedb38d4ed1f65856f8bcce0330bf7b6039f14b7ab8316ad821c",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_iexec_result_storage_provider",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:39"
          },
          {
            "label": "_iexec_result_storage_proxy",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:40"
          },
          {
            "label": "_salt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:41"
          },
          {
            "label": "_nextCollectionTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "ProtectedDataSharing",
            "src": "contracts/ProtectedDataSharing.sol:41"
          },
          {
            "label": "earning",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProtectedDataSharing",
            "src": "contracts/ProtectedDataSharing.sol:44"
          },
          {
            "label": "protectedDataDetails",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(ProtectedDataDetails)5769_storage)",
            "contract": "ProtectedDataSharing",
            "src": "contracts/ProtectedDataSharing.sol:46"
          },
          {
            "label": "collectionDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(CollectionDetails)5749_storage)",
            "contract": "ProtectedDataSharing",
            "src": "contracts/ProtectedDataSharing.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_struct(ProtectedDataDetails)5769_storage)": {
            "label": "mapping(address => struct IProtectedDataSharing.ProtectedDataDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint48)": {
            "label": "mapping(address => uint48)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionDetails)5749_storage)": {
            "label": "mapping(uint256 => struct IProtectedDataSharing.CollectionDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionDetails)5749_storage": {
            "label": "struct IProtectedDataSharing.CollectionDetails",
            "members": [
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subscriptionExpiration",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscriptionParams",
                "type": "t_struct(SubscriptionParams)6036_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subscribers",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProtectedDataDetails)5769_storage": {
            "label": "struct IProtectedDataSharing.ProtectedDataDetails",
            "members": [
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "app",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rentalExpiration",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "inSubscription",
                "type": "t_bool",
                "offset": 26,
                "slot": "1"
              },
              {
                "label": "rentingParams",
                "type": "t_struct(RentingParams)5862_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "renters",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sellingParams",
                "type": "t_struct(SellingParams)5938_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RentingParams)5862_storage": {
            "label": "struct IRental.RentingParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 14,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellingParams)5938_storage": {
            "label": "struct ISale.SellingParams",
            "members": [
              {
                "label": "isForSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SubscriptionParams)6036_storage": {
            "label": "struct ISubscription.SubscriptionParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 14,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint112": {
            "label": "uint112",
            "numberOfBytes": "14"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "eb311bedb83af8e17871f7ae6659e7c7eab247025f6bc0475130f46616d3e543": {
      "address": "0x7622936Bde4294D117191Fc2eBB7f36c915BDa91",
      "txHash": "0xb596284c650dd3c3f251e4db91dd0e3e4d5b070978a796b9e77c450a169b7370",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_protectedDataSharing",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IProtectedDataSharing)8141",
            "contract": "AppWhitelistRegistry",
            "src": "contracts/registry/AppWhitelistRegistry.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)245_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IProtectedDataSharing)8141": {
            "label": "contract IProtectedDataSharing",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b918d29db62f43eac11f208255e54b1d4a273b33f7c266d25ff50b75232cf18c": {
      "address": "0x905eEee7c553Cb8c02ccC92FF0aF94e1396bA1d8",
      "txHash": "0xa0c76f1c2e5378483400dde9da511d1c21ece3e642b7be81acb192c332b843b5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_iexec_result_storage_provider",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:40"
          },
          {
            "label": "_iexec_result_storage_proxy",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:41"
          },
          {
            "label": "_salt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:42"
          },
          {
            "label": "_nextCollectionTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:47"
          },
          {
            "label": "earning",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:51"
          },
          {
            "label": "protectedDataDetails",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(ProtectedDataDetails)8101_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:53"
          },
          {
            "label": "collectionDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(CollectionDetails)8080_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:55"
          },
          {
            "label": "_appOrders",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_struct(AppOrder)8512_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)245_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IAppWhitelist)7924": {
            "label": "contract IAppWhitelist",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(AppOrder)8512_storage)": {
            "label": "mapping(address => struct IexecLibOrders_v5.AppOrder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ProtectedDataDetails)8101_storage)": {
            "label": "mapping(address => struct IProtectedDataSharing.ProtectedDataDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint48)": {
            "label": "mapping(address => uint48)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionDetails)8080_storage)": {
            "label": "mapping(uint256 => struct IProtectedDataSharing.CollectionDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(AppOrder)8512_storage": {
            "label": "struct IexecLibOrders_v5.AppOrder",
            "members": [
              {
                "label": "app",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "appprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "volume",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tag",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "datasetrestrict",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "workerpoolrestrict",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requesterrestrict",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "salt",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "sign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CollectionDetails)8080_storage": {
            "label": "struct IProtectedDataSharing.CollectionDetails",
            "members": [
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastSubscriptionExpiration",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscriptionParams",
                "type": "t_struct(SubscriptionParams)8425_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subscribers",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProtectedDataDetails)8101_storage": {
            "label": "struct IProtectedDataSharing.ProtectedDataDetails",
            "members": [
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "appWhitelist",
                "type": "t_contract(IAppWhitelist)7924",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRentalExpiration",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "inSubscription",
                "type": "t_bool",
                "offset": 26,
                "slot": "1"
              },
              {
                "label": "rentingParams",
                "type": "t_struct(RentingParams)8261_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "renters",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sellingParams",
                "type": "t_struct(SellingParams)8332_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RentingParams)8261_storage": {
            "label": "struct IRental.RentingParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 14,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellingParams)8332_storage": {
            "label": "struct ISale.SellingParams",
            "members": [
              {
                "label": "isForSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SubscriptionParams)8425_storage": {
            "label": "struct ISubscription.SubscriptionParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 14,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint112": {
            "label": "uint112",
            "numberOfBytes": "14"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4accc49283dffac263ed594dc6891cc1c0112bf22ec82c43e14819e888d8c8ec": {
      "address": "0x72D940A3c23322Db87c16fF48C0258AF29Ddd8FA",
      "txHash": "0x10627d6c4696c91ae9eb7e0f2ae47675baae1a39807f1d9182496f6d52f893a3",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_iexec_result_storage_provider",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:40"
          },
          {
            "label": "_iexec_result_storage_proxy",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:41"
          },
          {
            "label": "_salt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:42"
          },
          {
            "label": "_nextCollectionTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:47"
          },
          {
            "label": "earning",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:51"
          },
          {
            "label": "protectedDataDetails",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(ProtectedDataDetails)8101_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:53"
          },
          {
            "label": "collectionDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(CollectionDetails)8080_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:55"
          },
          {
            "label": "_appOrders",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_struct(AppOrder)8512_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)245_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IAppWhitelist)7924": {
            "label": "contract IAppWhitelist",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(AppOrder)8512_storage)": {
            "label": "mapping(address => struct IexecLibOrders_v5.AppOrder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ProtectedDataDetails)8101_storage)": {
            "label": "mapping(address => struct IProtectedDataSharing.ProtectedDataDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint48)": {
            "label": "mapping(address => uint48)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionDetails)8080_storage)": {
            "label": "mapping(uint256 => struct IProtectedDataSharing.CollectionDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(AppOrder)8512_storage": {
            "label": "struct IexecLibOrders_v5.AppOrder",
            "members": [
              {
                "label": "app",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "appprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "volume",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tag",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "datasetrestrict",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "workerpoolrestrict",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "requesterrestrict",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "salt",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "sign",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CollectionDetails)8080_storage": {
            "label": "struct IProtectedDataSharing.CollectionDetails",
            "members": [
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastSubscriptionExpiration",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscriptionParams",
                "type": "t_struct(SubscriptionParams)8425_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subscribers",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProtectedDataDetails)8101_storage": {
            "label": "struct IProtectedDataSharing.ProtectedDataDetails",
            "members": [
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "appWhitelist",
                "type": "t_contract(IAppWhitelist)7924",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRentalExpiration",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "inSubscription",
                "type": "t_bool",
                "offset": 26,
                "slot": "1"
              },
              {
                "label": "rentingParams",
                "type": "t_struct(RentingParams)8261_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "renters",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sellingParams",
                "type": "t_struct(SellingParams)8332_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RentingParams)8261_storage": {
            "label": "struct IRental.RentingParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 14,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellingParams)8332_storage": {
            "label": "struct ISale.SellingParams",
            "members": [
              {
                "label": "isForSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SubscriptionParams)8425_storage": {
            "label": "struct ISubscription.SubscriptionParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint112",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 14,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint112": {
            "label": "uint112",
            "numberOfBytes": "14"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
