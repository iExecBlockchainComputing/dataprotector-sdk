###################### SHARING SMART CONTRACT DRONE CI ######################
kind: pipeline
type: docker
name: sharing-smart-contract-default

trigger:
  event: push

steps:
  - name: only sharing-smart-contract package
    image: bash
    commands:
      - cp -r packages/sharing-smart-contract/. . && rm -rf packages

  - name: install-deps
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: install-forge
    image: node:18.19
    pull: always
    commands:
      - export XDG_CONFIG_HOME=/drone/src
      - curl -L https://foundry.paradigm.xyz | bash
      - export PATH="$PATH:/drone/src/.foundry/bin"
      - foundryup
      - forge install

  - name: bellecour-fork
    detach: true
    image: ghcr.io/foundry-rs/foundry:latest
    pull: always
    expose:
      - 8545
    commands:
      - anvil --host 0.0.0.0 --port 8545 --hardfork berlin --fork-url https://bellecour.iex.ec --chain-id 134 --gas-limit 6700000 --gas-price 0

  - name: bellecour-fork-healthy
    image: bash
    commands:
      - while ! nc -z bellecour-fork 8545 ; do sleep 1 ; done && echo "bellecour-fork ready"
    depends_on:
      - bellecour-fork

  - name: compile smart contracts
    image: node:18.19
    commands:
      - export PATH="$PATH:/drone/src/.foundry/bin"
      - npm run compile
    depends_on:
      - install-forge
      - install-deps

  - name: check format
    image: node:18.19
    commands:
      - npm run check-format
    depends_on:
      - install-deps

  - name: lint
    image: node:18.19
    commands:
      - npm run lint
    depends_on:
      - install-deps

  - name: uml-diagrams
    image: node:18.19
    commands:
      - npm run uml
    depends_on:
      - install-deps

  - name: hardhat-tests
    image: node:18.19
    commands:
      - export PATH="$PATH:/drone/src/.foundry/bin"
      - npm run test -- --network ci-bellecour-fork
    depends_on:
      - install-deps
      - install-forge
      - bellecour-fork-healthy

  - name: forge-tests
    image: node:18.19
    commands:
      - export PATH="$PATH:/drone/src/.foundry/bin"
      - forge test --no-match-test "invariant" -vvvvv
    depends_on:
      - install-deps
      - install-forge
      - bellecour-fork-healthy

---
# deploy smart contract in prod or dev
kind: pipeline
type: docker
name: deploy-sharing-smart-contract

trigger:
  event:
    - promote
  target:
    - smart-contract-dev
    - smart-contract-production
  branch:
    - v2
    - main

steps:
  - name: only sharing-smart-contract package
    image: bash
    commands:
      - cp -r packages/sharing-smart-contract/. . && rm -rf packages

  - name: install deps
    image: node:18.19
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: bellecour-fork-node
    image: node:18.19
    detach: true
    commands:
      - npx hardhat node

  - name: compile smart contracts
    image: node:18.19
    commands:
      - npm run compile

  - name: check format
    image: node:18.19
    commands:
      - npm run check-format

  - name: lint
    image: node:18.19
    commands:
      - npm run lint

  - name: storage diagrams
    image: node:18.19
    commands:
      - npm run storage-to-diagrams

  - name: UML class diagrams
    image: node:18.19
    commands:
      - npm run sol-to-uml

  - name: wait for bellecour-fork-node service
    image: node:18.19
    commands:
      - while ! curl -sSf http://bellecour-fork-node:8545; do sleep 5; done

  - name: tests
    image: node:18.19
    commands:
      - npm run test -- --network ci-bellecour-fork

  - name: smart-contract dev deployment
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run deploy -- --network bellecour
    when:
      target:
        - smart-contract-dev
      branch:
        - v2

  - name: smart-contract prod deployment
    image: node:18.19
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run deploy -- --network bellecour
    when:
      target:
        - smart-contract-production
      branch:
        - main

  # - name: verify dev contract
  #   image: node:18.19
  #   commands:
  #     - timeout 30 npm run verify -- --network bellecour $(cat .smart-contract-address) || echo "verification may have failed, check at https://blockscout-bellecour.iex.ec/address/$(cat .smart-contract-address)/contracts#address-tabs"
  #   when:
  #     target:
  #       - smart-contract-dev
  #     branch:
  #       - develop

  # - name: verify prod contract
  #   image: node:18.19
  #   commands:
  #     - timeout 30 npm run verify -- --network bellecour $(cat .smart-contract-address) || echo "verification may have failed, check at https://blockscout-bellecour.iex.ec/address/$(cat .smart-contract-address)/contracts#address-tabs"
  #   when:
  #     target:
  #       - smart-contract-production
  #     branch:
  #       - main
