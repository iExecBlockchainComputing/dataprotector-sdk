/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISubscription,
  ISubscriptionInterface,
} from "../../interfaces/ISubscription.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
    ],
    name: "NoSubscriptionParams",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
    ],
    name: "OnGoingCollectionSubscriptions",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
    ],
    name: "ProctedDataInSubscription",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataAvailableInSubscription",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "endDate",
        type: "uint48",
      },
    ],
    name: "NewSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint112",
            name: "price",
            type: "uint112",
          },
          {
            internalType: "uint48",
            name: "duration",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct ISubscription.SubscriptionParams",
        name: "subscriptionParams",
        type: "tuple",
      },
    ],
    name: "NewSubscriptionParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataAddedForSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataRemovedFromSubscription",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
    ],
    name: "removeProtectedDataFromSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
    ],
    name: "setProtectedDataToSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint112",
            name: "price",
            type: "uint112",
          },
          {
            internalType: "uint48",
            name: "duration",
            type: "uint48",
          },
        ],
        internalType: "struct ISubscription.SubscriptionParams",
        name: "_subscriptionParams",
        type: "tuple",
      },
    ],
    name: "setSubscriptionParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
    ],
    name: "subscribeTo",
    outputs: [
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ISubscription__factory {
  static readonly abi = _abi;
  static createInterface(): ISubscriptionInterface {
    return new Interface(_abi) as ISubscriptionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISubscription {
    return new Contract(address, _abi, runner) as unknown as ISubscription;
  }
}
