/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IRental, IRentalInterface } from "../../interfaces/IRental.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint48",
        name: "_duration",
        type: "uint48",
      },
    ],
    name: "DurationInvalide",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataAvailableForRenting",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataCurrentlyBeingRented",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataNotAvailableForRenting",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "endDate",
        type: "uint48",
      },
    ],
    name: "NewRental",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "price",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "duration",
        type: "uint48",
      },
    ],
    name: "ProtectedDataAddedForRenting",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "ProtectedDataRemovedFromRenting",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
    ],
    name: "removeProtectedDataFromRenting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
    ],
    name: "rentProtectedData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "_price",
        type: "uint112",
      },
      {
        internalType: "uint48",
        name: "_duration",
        type: "uint48",
      },
    ],
    name: "setProtectedDataToRenting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRental__factory {
  static readonly abi = _abi;
  static createInterface(): IRentalInterface {
    return new Interface(_abi) as IRentalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRental {
    return new Contract(address, _abi, runner) as unknown as IRental;
  }
}
