/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICollection,
  ICollectionInterface,
} from "../../interfaces/ICollection.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
    ],
    name: "CollectionNotEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
    ],
    name: "NoProtectedDataInCollection",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionTokenId",
        type: "uint256",
      },
    ],
    name: "NotCollectionOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "protectedData",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCollection",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldCollection",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "appAddress",
        type: "address",
      },
    ],
    name: "ProtectedDataTransfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
      {
        internalType: "address",
        name: "_appAddress",
        type: "address",
      },
    ],
    name: "addProtectedDataToCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "createCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
    ],
    name: "removeCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protectedData",
        type: "address",
      },
    ],
    name: "removeProtectedDataFromCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICollection__factory {
  static readonly abi = _abi;
  static createInterface(): ICollectionInterface {
    return new Interface(_abi) as ICollectionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ICollection {
    return new Contract(address, _abi, runner) as unknown as ICollection;
  }
}
